name: CI Checks

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  system-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
      - name: Build
        run: |
          CFLAGS="-Wall -Wextra -DNDEBUG -DLIBRARY_LOG_LEVEL=LOG_DEBUG"
          CFLAGS+=" -fsanitize=address,undefined"
          cmake -S test -B build/ \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DSYSTEM_TESTS=1 \
          -DUNIT_TESTS=0 \
          -DCMAKE_C_FLAGS="${CFLAGS}"
          make -C build/ all
      - name: Integration Tests
        run: |
          cd build/
          ctest --output-on-failure
  unit-tests-with-sanitizer:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
      - name: Build
        run: |
          CFLAGS="-Wall -Wextra -DNDEBUG"
          CFLAGS+=" -fsanitize=address,undefined"
          cmake -S test -B build/ \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DUNIT_TESTS=1 \
          -DSYSTEM_TESTS=0 \
          -DCMAKE_C_FLAGS="${CFLAGS}"
          make -C build/ all
      - name: Unit Tests
        run: |
          cd build/
          ctest --output-on-failure
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
      - name: Build
        run: |
          sudo apt-get install -y lcov
          CFLAGS="--coverage -Wall -Wextra -DNDEBUG"
          cmake -S test -B build/ \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DUNIT_TESTS=1 \
          -DSYSTEM_TESTS=0 \
          -DCMAKE_C_FLAGS="${CFLAGS}"
          make -C build/ all
      - name: Unit Tests
        run: |
          cd build/
          ctest --output-on-failure
          cd ..
      - name: Coverage
        run: |
          make -C build/ coverage
          lcov --rc lcov_branch_coverage=1 --remove build/coverage.info '*test*' --output-file build/coverage.info
          lcov --rc lcov_branch_coverage=1 --remove build/coverage.info '*CMakeCCompilerId*' --output-file build/coverage.info
          lcov --rc lcov_branch_coverage=1 --remove build/coverage.info '*mocks*' --output-file build/coverage.info
          lcov --list build/coverage.info
      - name: Check Coverage
        uses: FreeRTOS/CI-CD-Github-Actions/coverage-cop@main
        with:
          path: ./build/coverage.info
          line-coverage-min: 99
          branch-coverage-min: 90
  complexity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: sudo apt-get install complexity
      - name: Complexity
        run: |
          find source/ -iname '*.c' -not -path 'source/portable/windows/*' -not -path 'source/dependency*' |\
          xargs complexity --scores --threshold=0 --horrid-threshold=8
  doxygen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check doxygen build
        uses: FreeRTOS/CI-CD-Github-Actions/doxygen@main
        with:
          path: ./
  spell-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Parent Repo
        uses: actions/checkout@v2
        with:
          ref: main
          repository: aws/aws-iot-device-sdk-embedded-C
      - run: rm -r libraries/standard/corePKCS11
      - name: Clone This Repo
        uses: actions/checkout@v2
        with:
          path: libraries/standard/corePKCS11
      - name: Install spell
        run: |
          sudo apt-get install spell
          sudo apt-get install util-linux
      - name: Check spelling
        run: |
          PATH=$PATH:$PWD/tools/spell
          # Modifies `find` command used in spell checker to ignore the test and dependency directory
          # The command looks like this `extract-comments `find $DIRNAME -name \*.[ch]` should the line change and the sed command will
          # append "-not path {val added below}" for each of the directories mentioned.
          # https://github.com/aws/aws-iot-device-sdk-embedded-C/blob/ad28ed355df4f82b77f48028e24bd6fc9e63bc54/tools/spell/find-unknown-comment-words#L86
          sed -i 's/find $DIRNAME/find $DIRNAME -not -path '*test*' -not -path '*dependency*'/g' tools/spell/find-unknown-comment-words
          find-unknown-comment-words --directory libraries/standard/corePKCS11
          if [ "$?" = "0" ]; then
            exit 0
          else
            exit 1
          fi
  formatting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Check formatting
        uses: FreeRTOS/CI-CD-Github-Actions/formatting@main
        with:
          path: ./
          exclude-dirs: .git
  link-verifier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python for link verifier action
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.0'
      - name: Check Links
        uses: FreeRTOS/CI-CD-GitHub-Actions/link-verifier@main
        with:
          path: ./
          exclude-dirs: cbmc
          include-file-types: .c,.h,.dox
  git-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout awslabs/git-secrets
        uses: actions/checkout@v2
        with:
          repository: awslabs/git-secrets
          ref: master
          path: git-secrets
      - name: Install git-secrets
        run: cd git-secrets && sudo make install && cd ..
      - name: Run git-secrets
        run: |
          git-secrets --register-aws
          git-secrets --scan
  memory_statistics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init --recursive --checkout
      - name: Fetch dependencies (mbedtls)
        run: |
          cmake -S test -B build/ \
          -G "Unix Makefiles" \
          -DUNIT_TESTS=0 \
          -DSYSTEM_TESTS=0 \
          -DCMAKE_C_FLAGS="${CFLAGS}"
      - name: Install Python3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.0'
      - name: Measure sizes
        uses: FreeRTOS/CI-CD-Github-Actions/memory_statistics@main
        with:
            config: .github/memory_statistics_config.json
            check_against: docs/doxygen/include/size_table.md
  proof_ci:
    runs-on: cbmc_ubuntu-latest_16-core
    steps:
      - name: Set up CBMC runner
        uses: FreeRTOS/CI-CD-Github-Actions/set_up_cbmc_runner@main
        with:
          cbmc_version: "5.61.0"
          cbmc_viewer_version: "3.5"
      - uses: actions/checkout@v2
      - name: Update mbedtls submodule
        run: |
          git submodule update --init --checkout --recursive --depth 1
      - name: check for mbedtls header file
        run: |
          cat source/dependency/3rdparty/mbedtls/include/mbedtls/pk.h
      - name: Run CBMC
        uses: FreeRTOS/CI-CD-Github-Actions/run_cbmc@main
        with:
          proofs_dir: test/cbmc/proofs
